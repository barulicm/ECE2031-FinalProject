-- Altera Memory Initialization File (MIF)

DEPTH = 1024;
WIDTH = 16;

ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;

CONTENT
  BEGIN
    [000..3FF] : 0000;  -- Default to NOP

           000 : 0001;  -- Mask0:    DW &B00000001
           001 : 0002;  -- Mask1:    DW &B00000010
           002 : 0004;  -- Mask2:    DW &B00000100
           003 : 0008;  -- Mask3:    DW &B00001000
           004 : 0010;  -- Mask4:    DW &B00010000
           005 : 0020;  -- Mask5:    DW &B00100000
           006 : 0040;  -- Mask6:    DW &B01000000
           007 : 0080;  -- Mask7:    DW &B10000000
           008 : 00FF;  -- LowByte:  DW &HFF      ; binary 00000000 1111111
           009 : 000F;  -- LowNibl:  DW &HF       ; 0000 0000 0000 1111
           00A : 03C1;  -- OneMeter: DW 961       ; ~1m in 1.05mm units
           00B : 01E1;  -- HalfMeter: DW 481      ; ~0.5m in 1.05mm units
           00C : 024A;  -- TwoFeet:  DW 586       ; ~2ft in 1.05mm units
           00D : 005A;  -- Deg90:    DW 90        ; 90 degrees in odometry units
           00E : 00B4;  -- Deg180:   DW 180       ; 180
           00F : 010E;  -- Deg270:   DW 270       ; 270
           010 : 0168;  -- Deg360:   DW 360       ; can never actually happen; for math only
           011 : 0064;  -- FSlow:    DW 100       ; 100 is about the lowest velocity value that will move
           012 : FF9C;  -- RSlow:    DW -100
           013 : 015E;  -- FMid:     DW 350       ; 350 is a medium speed
           014 : FEA2;  -- RMid:     DW -350
           015 : 01F4;  -- FFast:    DW 500       ; 500 is almost max speed (511 is max)
           016 : FE0C;  -- RFast:    DW -500
           017 : 40FE;  -- Main:		CALL	WaitForKey
           018 : 5C03;  -- 			LOADI	3
           019 : 0913;  -- 			STORE	S_X
           01A : 5C01;  -- 			LOADI	1
           01B : 0914;  -- 			STORE	S_Y
           01C : 5C00;  -- 			LOADI	0
           01D : 0915;  -- 			STORE	S_T
           01E : 5C03;  -- 			LOADI	3
           01F : 0916;  -- 			STORE	E_X
           020 : 0917;  -- 			STORE	E_Y
           021 : 4025;  -- 			CALL	PlanPath
           022 : 5FFF;  -- 			LOADI	&HFFFF
           023 : 4C01;  -- 			OUT		LEDS
           024 : 1424;  -- halt:		JUMP	halt
           025 : 0514;  -- PlanPath:	LOAD	S_Y
           026 : 37FE;  -- 			ADDI	-2
           027 : 1C2C;  -- 			JPOS	pp1
           028 : 0517;  -- 			LOAD	E_Y
           029 : 37FE;  -- 			ADDI	-2
           02A : 1C30;  -- 			JPOS	pp_cross
           02B : 1458;  -- 			JUMP	pp_n_cross
           02C : 0517;  -- 	pp1:	LOAD	E_Y
           02D : 37FE;  -- 			ADDI	-2
           02E : 1C58;  -- 			JPOS	pp_n_cross
           02F : 1430;  -- 			JUMP	pp_cross
           030 : 0513;  --   pp_cross: LOAD	S_X
           031 : 37FE;  -- 			ADDI	-2
           032 : 1C41;  -- 			JPOS	pp_c_mvx
           033 : 0515;  -- 			LOAD	S_T 			; Turn ; move to E_Y
           034 : 745A;  -- 			MULI	90
           035 : 409D;  -- 			CALL	Turn
           036 : 0514;  -- 			LOAD	S_Y				; move
           037 : 1117;  -- 			SUB		E_Y
           038 : 700C;  -- 			MUL		TwoFeet
           039 : 40CB;  -- 			CALL	Forw
           03A : 5C5A;  -- 			LOADI	90				; Turn ; move to E_X  ( LOADI 90 )
           03B : 409D;  -- 			Call	Turn
           03C : 0516;  -- 			LOAD	E_X				; move
           03D : 1113;  -- 			SUB		S_X
           03E : 700C;  -- 			MUL		TwoFeet
           03F : 40CB;  -- 			CALL	Forw
           040 : 4400;  -- 			RETURN
           041 : 5CFF;  --   pp_c_mvx: LOADI	&HFF
           042 : 4C04;  --   			OUT		SSEG1
           043 : 0515;  --   			LOAD	S_T				; Turn ; move to x = 1
           044 : 37FF;  --   			ADDI	-1
           045 : 745A;  --   			MULI	90
           046 : 409D;  --   			CALL	Turn
           047 : 0513;  --   			LOAD	S_X
           048 : 37FE;  --   			ADDI	-2
           049 : 700C;  --   			MUL		TwoFeet
           04A : 40CB;  --   			CALL	Forw		; move
           04B : 5C5A;  -- 			LOADI	90				; Turn ; move to E_Y
           04C : 409D;  -- 			CALL	Turn
           04D : 0514;  -- 			LOAD	S_Y				; move
           04E : 1117;  -- 			SUB		E_Y
           04F : 700C;  -- 			MUL		TwoFeet
           050 : 40CB;  -- 			CALL	Forw
           051 : 5C5A;  -- 			LOADI	90
           052 : 409D;  -- 			CALL	Turn			; Turn ; move to E_X
           053 : 0516;  -- 			LOAD	E_X
           054 : 1113;  -- 			SUB		S_X
           055 : 700C;  -- 			MUL		TwoFeet
           056 : 40CB;  -- 			CALL	Forw		; move
           057 : 4400;  -- 			RETURN
           058 : 0515;  -- pp_n_cross:	LOAD	S_T
           059 : 745A;  -- 			MULI	90
           05A : 409D;  -- 			CALL	Turn
           05B : 0517;  -- 			LOAD	E_Y
           05C : 1114;  -- 			SUB		S_Y
           05D : 700C;  -- 			MUL		TwoFeet
           05E : 40CB;  -- 			CALL	Forw
           05F : 5C5A;  -- 			LOADI	90
           060 : 409D;  -- 			CALL	Turn
           061 : 0513;  -- 			LOAD	S_X
           062 : 1116;  -- 			SUB		E_X
           063 : 700C;  -- 			MUL		TwoFeet
           064 : 40CB;  -- 			CALL	Forw
           065 : 4400;  -- 			RETURN
           066 : 5C00;  -- 	Loadi	0
           067 : 4C83;  -- 	OUT		LVELCMD
           068 : 4C8B;  -- 	OUT		RVELCMD
           069 : 4CC3;  -- 	OUT 	RESETPOS
           06A : 5C00;  -- 	LoadI 0
           06B : 08F8;  -- 	Store CurTh
           06C : 5C00;  -- 	LoadI 0
           06D : 08FB;  -- 	Store ChgTh
           06E : 5C02;  -- 	LoadI 2
           06F : 410B;  -- 	Call  WaitAC
           070 : 4400;  -- 	Return
           071 : 04F8;  -- 	LOAD CurTh
           072 : 08F9;  -- 	Store PreTh
           073 : 48C2;  -- 	IN Theta
           074 : 08F8;  -- 	Store CurTh
           075 : 10F9;  -- 	Sub PreTh
           076 : 08FA;  -- 	Store DifTh
           077 : 379C;  -- 	ADDI -100
           078 : 1C7C;  -- 	JPOS C>100
           079 : 34C8;  -- 	ADDI 200
           07A : 1880;  -- 	JNeg C<-100
           07B : 1484;  -- 	JUMP C~0
           07C : 04FA;  -- 	Load DifTh
           07D : 3698;  -- 	Addi -360
           07E : 08FA;  -- 	Store DifTh
           07F : 1484;  -- 	Jump C~0
           080 : 04FA;  -- 	Load DifTh
           081 : 3568;  -- 	Addi 360
           082 : 08FA;  -- 	Store DifTh
           083 : 1484;  -- 	Jump C~0
           084 : 04FB;  -- 	Load ChgTh
           085 : 0CFA;  -- 	Add DifTh
           086 : 08FB;  -- 	Store ChgTh
           087 : 0CFB;  -- 	Add ChgTh
           088 : 08FC;  -- 	Store Correction ;Used in forward. Plus or minus (2 * delta theta)
           089 : 04F7;  -- 	Load InAngle
           08A : 10FB;  -- 	Sub ChgTh
           08B : 3670;  -- 	ADDI -400
           08C : 1C95;  -- 	JPOS C-500
           08D : 04F7;  -- 	Load InAngle
           08E : 10FB;  -- 	Sub ChgTh
           08F : 3590;  -- 	ADDI 400
           090 : 1895;  -- 	JNeg C-500
           091 : 04F7;  -- 	Load InAngle
           092 : 10FB;  -- 	Sub ChgTh
           093 : 1897;  -- 	JNeg Cneg
           094 : 149A;  -- 	Jump Cpos
           095 : 5DF4;  -- 	LOADI 500
           096 : 149B;  -- 	Jump Cang
           097 : 08EB;  -- 	Store Temp
           098 : 5C00;  -- 	LoadI 0
           099 : 10EB;  -- 	Sub Temp
           09A : 3464;  -- 	ADDI 100
           09B : 08FD;  -- 	Store TurnSpeed ;Always Positive, between 0 and 500;
           09C : 4400;  -- 	return
           09D : 08F7;  -- 	Store InAngle
           09E : 4066;  -- 	Call Stop
           09F : 04F7;  -- 	Load InAngle
           0A0 : 18BE;  -- 	JNEG TurnRLoop
           0A1 : 1CAA;  -- 	JPOS TurnLLoop
           0A2 : 4066;  -- 	Call Stop
           0A3 : 4400;  -- 	return
           0A4 : 08F7;  -- 	Store InAngle
           0A5 : 1CAA;  -- 	JPos TurnLLoop ;Turning left increase theta, so InAngle must be positive.
           0A6 : 5C00;  -- 	LoadI 0		   ;If it is not positive, it is negated.
           0A7 : 10F7;  -- 	Sub InAngle
           0A8 : 08F7;  -- 	Store InAngle
           0A9 : 4066;  -- 	Call Stop	   ;To reset variables
           0AA : 4071;  -- 	Call UpdateAngle
           0AB : 5C00;  -- 	Loadi 0
           0AC : 10FD;  -- 	Sub TurnSpeed
           0AD : 4C83;  -- 	Out LVELCMD
           0AE : 5C00;  -- 	Loadi 0
           0AF : 04FD;  -- 	Load TurnSpeed
           0B0 : 4C8B;  -- 	Out RVELCMD
           0B1 : 04FB;  -- 	Load ChgTh
           0B2 : 4C04;  -- 	Out SSEG1
           0B3 : 10F7;  -- 	Sub InAngle
           0B4 : 4C05;  -- 	Out SSeg2
           0B5 : 18AA;  -- 	JNEG TurnLLoop
           0B6 : 4066;  -- 	Call Stop 
           0B7 : 4400;  -- 	return
           0B8 : 08F7;  -- 	Store InAngle
           0B9 : 18BE;  -- 	JNeg TurnRLoop ;Turning right decreases theta, so InAngle must be negative.
           0BA : 5C00;  -- 	LoadI 0		   ;If it is not negative, it is negated.
           0BB : 10F7;  -- 	Sub InAngle
           0BC : 08F7;  -- 	Store InAngle
           0BD : 4066;  -- 	Call Stop 	   ;To reset variables
           0BE : 4071;  -- 	Call UpdateAngle
           0BF : 04FD;  -- 	Load TurnSpeed
           0C0 : 4C83;  -- 	Out LVELCMD
           0C1 : 5C00;  -- 	Loadi 0
           0C2 : 10FD;  -- 	Sub TurnSpeed
           0C3 : 4C8B;  -- 	Out RVELCMD
           0C4 : 04FB;  -- 	Load ChgTh
           0C5 : 4C04;  -- 	Out SSeg1
           0C6 : 10F7;  -- 	Sub InAngle
           0C7 : 4C05;  -- 	Out SSeg2
           0C8 : 1CBE;  -- 	JPOS TurnRLoop
           0C9 : 4066;  -- 	Call Stop
           0CA : 4400;  -- 	return
           0CB : 08F1;  -- 	Store InDist
           0CC : 4066;  -- 	Call Stop	   ;To reset variables
           0CD : 4880;  -- 	In LPOS
           0CE : 08F2;  -- 	Store StX
           0CF : 04F1;  -- 	Load InDist
           0D0 : 18DE;  -- 	JNEG Backward
           0D1 : 4071;  -- 	Call UpdateAngle
           0D2 : 5CC8;  -- 	LOADI 200   	;200 is the speed. Can be changed.
           0D3 : 0CFC;  -- 	Add Correction
           0D4 : 4C83;  -- 	Out LVELCMD
           0D5 : 5CC8;  -- 	Loadi 200
           0D6 : 10FC;  -- 	Sub Correction
           0D7 : 4C8B;  -- 	Out RVELCMD
           0D8 : 4880;  -- 	In LPOS
           0D9 : 10F2;  -- 	Sub StX
           0DA : 10F1;  -- 	Sub InDist
           0DB : 18D1;  -- 	JNeg Onward
           0DC : 4066;  -- 	Call Stop
           0DD : 4400;  -- 	return
           0DE : 4071;  -- 	Call UpdateAngle
           0DF : 5F38;  -- 	LOADI -200   	;200 is the speed. Can be changed.
           0E0 : 0CFC;  -- 	Add Correction
           0E1 : 4C83;  -- 	Out LVELCMD
           0E2 : 5F38;  -- 	Loadi -200
           0E3 : 10FC;  -- 	Sub Correction
           0E4 : 4C8B;  -- 	Out RVELCMD
           0E5 : 4880;  -- 	In LPOS
           0E6 : 10F2;  -- 	Sub StX
           0E7 : 10F1;  -- 	Sub InDist
           0E8 : 1CDE;  -- 	JPos Backward
           0E9 : 4066;  -- 	Call Stop
           0EA : 4400;  -- 	return
           0EB : 0000;  -- Temp:     DW 0 ; "Temp" is not a great name, but can be useful
           0EC : 0000;  -- Time:	  DW 0
           0ED : 0000;  -- InAng:	  DW 0
           0EE : 0000;  -- InAngTop: DW 0
           0EF : 0000;  -- StAng:	  DW 0
           0F0 : 0000;  -- InDistTop: DW 0
           0F1 : 0000;  -- InDist:	  DW 0
           0F2 : 0000;  -- StX:	  DW 0
           0F3 : 0000;  -- StY:	  DW 0
           0F4 : 0000;  -- DifY:	  DW 0
           0F5 : 0064;  -- Speed:	  DW 100
           0F6 : 0000;  -- StartAngle:	DW 0
           0F7 : 0000;  -- InAngle:  DW 0
           0F8 : 0000;  -- CurTh:	  DW 0
           0F9 : 0000;  -- PreTh:	  DW 0
           0FA : 0000;  -- DifTh:	  DW 0   ;Change Theta
           0FB : 0000;  -- ChgTh:	  DW 0   ;Total Change
           0FC : 0000;  -- Correction: DW 0 ;Amount to adjust by
           0FD : 0000;  -- TurnSpeed: DW 0  ;The positive rate at which to turn.
           0FE : 4803;  -- WaitForKey:		IN		XIO
           0FF : 2402;  -- 				AND		Mask2
           100 : 1CFE;  -- 				JPOS	WaitForKey
           101 : 4803;  -- WaitForKey2:	IN		XIO
           102 : 2402;  -- 				AND		Mask2
           103 : 2101;  -- 				JZERO	WaitForKey2
           104 : 4400;  -- 				RETURN
           105 : 4C02;  -- 	OUT    TIMER
           106 : 4802;  -- 	IN     TIMER
           107 : 4C07;  -- 	OUT    XLEDS       ; User-feedback that a pause is occurring.
           108 : 37F6;  -- 	ADDI   -10         ; 1 second in 10Hz.
           109 : 1906;  -- 	JNEG   Wloop
           10A : 4400;  -- 	RETURN
           10B : 0912;  -- 	STORE  WaitTime
           10C : 4C02;  -- 	OUT    Timer
           10D : 4802;  -- 	IN     Timer
           10E : 4C07;  -- 	OUT    XLEDS       ; User-feedback that a pause is occurring.
           10F : 1112;  -- 	SUB    WaitTime
           110 : 190D;  -- 	JNEG   WACLoop
           111 : 4400;  -- 	RETURN
           112 : 0000;  -- 	WaitTime: DW 0     ; "local" variable.
           113 : 0000;  -- S_X:		DW	0
           114 : 0000;  -- S_Y:		DW	0
           115 : 0000;  -- S_T:		DW	0
           116 : 0000;  -- E_X:		DW	0
           117 : 0000;  -- E_Y:		DW	0
  END;
