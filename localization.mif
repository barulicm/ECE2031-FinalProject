-- Altera Memory Initialization File (MIF)

DEPTH = 1024;
WIDTH = 16;

ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;

CONTENT
  BEGIN
    [000..3FF] : 0000;  -- Default to NOP

           000 : 0603;  -- num: dw &H0603 ;1,1 angle 0
           001 : 06C0;  -- num1: dw &H06C0 ;1,1 angle 1
           002 : 00D8;  -- num2: dw &H00D8 ;1,1 angle 2
           003 : 001B;  -- num3: dw &H001B ;1,1 angle 3
           004 : 0840;  -- num4: dw &H0840 ;5,3 ang: 2
           005 : 0404;  -- 	load num4
           006 : 4012;  -- 	call FindCoords
           007 : 0485;  -- 	load hasFoundCoord
           008 : 37FF;  -- 	addi -1
           009 : 180F;  -- 	jneg coordNotFound
           00A : 0486;  -- 	load coordFound
           00B : 4C05;  -- 	out SSEG2
           00C : 0487;  -- 	load angleFound
           00D : 4C04;  -- 	out SSEG1
           00E : 1411;  -- 	jump Stop
           00F : 047D;  -- 	load One
           010 : 4C01;  -- 	out LEDS
           011 : 1411;  -- 	jump Stop
           012 : 087F;  -- 	store wallDists
           013 : 0480;  -- 	load numCoordsCount
           014 : 0480;  -- 	load numCoordsCount
           015 : 3401;  -- 	addi 1
           016 : 0880;  -- 	store numCoordsCount
           017 : 4C04;  -- 	out SSEG1
           018 : 1081;  -- 	sub totalNumCoords
           019 : 203A;  -- 	jzero loop1End
           01A : 0489;  -- 	load wallDistArrayAddr
           01B : 0C80;  -- 	add numCoordsCount
           01C : 6000;  -- 	loada
           01D : 0888;  -- 	store curWallDist
           01E : 4C06;  -- 	out LCD
           01F : 047C;  -- 	load Zero
           020 : 3402;  -- 	addi 2
           021 : 4C01;  -- 	out LEDS
           022 : 0482;  -- 	load numShifts
           023 : 3401;  -- 	addi 1
           024 : 0882;  -- 	store numShifts
           025 : 1083;  -- 	sub totalNumShifts
           026 : 2036;  -- 	jzero loop2End
           027 : 0488;  -- 	load curWallDist
           028 : 107F;  -- 	sub wallDists
           029 : 2042;  -- 	jzero foundWall
           02A : 047C;  -- 	load Zero
           02B : 3410;  -- 	addi 16
           02C : 4C01;  -- 	out LEDS
           02D : 0488;  -- 	load curWallDist
           02E : 4057;  -- 	call RightRotate3
           02F : 0888;  -- 	store curWallDist
           030 : 0484;  -- 	load angle
           031 : 3401;  -- 	addi 1
           032 : 0884;  -- 	store angle
           033 : 37FD;  -- 	addi -3
           034 : 1C3F;  -- 	jpos resetAngle
           035 : 1422;  -- 	jump loop2
           036 : 047C;  -- 	load Zero
           037 : 0882;  -- 	store numShifts
           038 : 0884;  -- 	store angle
           039 : 1414;  -- 	jump loop1
           03A : 047C;  -- 	load Zero
           03B : 0880;  -- 	store numCoordsCount
           03C : 5C00;  -- 	loadi 0
           03D : 0885;  -- 	store hasFoundCoord
           03E : 4400;  -- 	return
           03F : 047C;  -- 	load Zero
           040 : 0884;  -- 	store angle
           041 : 1422;  -- 	jump loop2
           042 : 047C;  -- 	load Zero
           043 : 3404;  -- 	addi 4
           044 : 4C01;  -- 	out LEDS
           045 : 0613;  -- 	load coordArrayAddr
           046 : 0C80;  -- 	add numCoordsCount
           047 : 6000;  -- 	loada
           048 : 4C06;  -- 	out LCD
           049 : 0886;  -- 	store coordFound
           04A : 0484;  -- 	load angle
           04B : 0887;  -- 	store angleFound
           04C : 047C;  -- 	load Zero
           04D : 3401;  -- 	addi 1
           04E : 0885;  -- 	store hasFoundCoord
           04F : 047C;  -- 	load Zero
           050 : 3408;  -- 	addi 8
           051 : 4C01;  -- 	out LEDS
           052 : 4400;  -- 	return
           053 : 0007;  -- rotateMask: dw &B0000000000000111
           054 : 0000;  -- origVal: dw 0
           055 : 0000;  -- last3Bits: dw 0
           056 : 0000;  -- shiftVal: dw 0
           057 : 0854;  -- 	store origVal
           058 : 2453;  -- 	and rotateMask
           059 : 0855;  -- 	store last3Bits
           05A : 0454;  -- 	load origVal
           05B : 3013;  -- 	shift -3
           05C : 0856;  -- 	store shiftVal
           05D : 0455;  -- 	load last3Bits
           05E : 3009;  -- 	shift 9
           05F : 2856;  -- 	or shiftVal
           060 : 4400;  -- 	return
           061 : 0000;  -- MultiplyA: dw 0
           062 : 0000;  -- MultiplyB: dw 0
           063 : 0000;  -- multTemp: dw 0
           064 : 0462;  -- 	load MultiplyB
           065 : 4C04;  -- 	out SSEG1
           066 : 0461;  -- 	load MultiplyA
           067 : 4C05;  -- 	out SSEG2
           068 : 4077;  -- 	call Wait1
           069 : 4077;  -- 	call Wait1
           06A : 4077;  -- 	call Wait1
           06B : 0462;  -- 	load MultiplyB
           06C : 0863;  -- 	store multTemp
           06D : 0463;  -- 	load multTemp
           06E : 37FF;  -- 	addi -1
           06F : 0863;  -- 	store multTemp
           070 : 1875;  -- 	jneg multiplyEnd
           071 : 0461;  -- 	load MultiplyA
           072 : 0C61;  -- 	add MultiplyA
           073 : 0861;  -- 	store MultiplyA
           074 : 146D;  -- 	jump multiplyHelper
           075 : 0461;  -- 	load MultiplyA
           076 : 4400;  -- 	return
           077 : 4C02;  -- 	OUT    TIMER
           078 : 4802;  -- 	IN     TIMER
           079 : 37F6;  -- 	ADDI   -10         ; 1 second in 10Hz.
           07A : 1878;  -- 	JNEG   Wloop
           07B : 4400;  -- 	RETURN	
           07C : 0000;  -- Zero: dw 0
           07D : 0001;  -- One:      DW 1
           07E : DEAD;  -- DEAD: dw &HDEAD
           07F : 0000;  -- wallDists: dw 0
           080 : FFFF;  -- numCoordsCount: dw -1
           081 : 0012;  -- totalNumCoords: dw 18
           082 : 0000;  -- numShifts: dw 0
           083 : 0005;  -- totalNumShifts: dw 5
           084 : 0000;  -- angle: dw &B00
           085 : 0000;  -- hasFoundCoord: dw 0
           086 : 0000;  -- coordFound: dw 0
           087 : 0000;  -- angleFound: dw 0
           088 : 0000;  -- curWallDist: dw 0
           089 : 0200;  -- wallDistArrayAddr: dw &H200
           200 : 0603;  -- c11: dw &H0603 ; --3300
           201 : 0681;  -- c21: dw &H0681 ; --3201
           202 : 0242;  -- c31: dw &h0242 ; --1102
           203 : 0203;  -- c41: dw &h0203 ; --1003
           204 : 04C8;  -- c12: dw &h04C8 ; --2310
           205 : 0489;  -- c22: dw &h0489 ; --2211
           206 : 004A;  -- c32: dw &h004A ; --0112
           207 : 000B;  -- c42: dw &h000B ; --0013
           208 : 0310;  -- c13: dw &h0310 ; --1420
           209 : 02D1;  -- c23: dw &h02D1 ; --1321
           20A : 0282;  -- c33: dw &h0282 ; --1202
           20B : 0243;  -- c43: dw &h0243 ; --1103
           20C : 0204;  -- c53: dw &h0204 ; --1004
           20D : 0158;  -- c14: dw &h0158 ; --0530
           20E : 0119;  -- c24: dw &h0119 ; --0431
           20F : 00CA;  -- c34: dw &h00CA ; --0312
           210 : 008B;  -- c44: dw &h008B ; --0213
           211 : 004C;  -- c54: dw &h004C ; --0114
           212 : 0005;  -- c64: dw &h0005 ; --0005
           213 : 0220;  -- coordArrayAddr: dw &H220
           220 : 0011;  -- C11a: dw &B00010001
           221 : 0021;  -- C21a: dw &B00100001
           222 : 0031;  -- C31a: dw &B00110001
           223 : 0041;  -- C41a: dw &B01000001
           224 : 0012;  -- C12a: dw &B00010010
           225 : 0022;  -- C22a: dw &B00100010
           226 : 0032;  -- C32a: dw &B00110010
           227 : 0042;  -- C42a: dw &B01000010
           228 : 0013;  -- C13a: dw &B00010011
           229 : 0023;  -- C23a: dw &B00100011
           22A : 0033;  -- C33a: dw &B00110011
           22B : 0043;  -- C43a: dw &B01000011
           22C : 0053;  -- C53a: dw &B01010011
           22D : 0014;  -- C14a: dw &B00010100
           22E : 0024;  -- C24a: dw &B00100100
           22F : 0034;  -- C34a: dw &B00110100
           230 : 0044;  -- C44a: dw &B01000100
           231 : 0054;  -- C54a: dw &B01010100
           232 : 0064;  -- C64a: dw &B01100100
  END;
